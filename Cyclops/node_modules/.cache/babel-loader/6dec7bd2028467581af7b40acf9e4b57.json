{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\Cyclopslogin\\\\src\\\\Solve.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport './style.css';\n\nvar Latex = require('react-latex'); //import './css/main.css';\n// import './custom.css';\n// import './minty.css';\n// import './zephyr.css';\n// change it to cyclops.cse.iitk.ac.in\n//const SERVER=\"http://cyclops.cse.iitk.ac.in:5000/\"\n\n\nconst SERVER = \"http://localhost:5000/\";\n\nasync function contactServer(endpoint, query) {\n  var fetchlink;\n  if (query == null) fetchlink = SERVER + endpoint;else fetchlink = SERVER + endpoint + \"?\" + query;\n  return fetch(fetchlink, {\n    method: \"GET\"\n  }).then(response => response.json()).then(data => {\n    console.log(\"Sending request for \" + fetchlink + \" \\n\");\n    return data;\n  }).catch(console.log(\"Got error\\n\"));\n} //const passcode = React.createRef();\n\n\nfunction Solve() {\n  const [passcode, setPasscode] = useState(\"\");\n  const [grammar, setGrammar] = useState(\"\");\n  const [task, setTask] = useState(\"\");\n  const [grammarlist, setGrammarList] = useState(\"\");\n  const [tasklist, setTaskList] = useState(\"\");\n  const [parsetable, setParseTable] = useState(\"\");\n  const [solution, setSolution] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [finalmsg, setFinalMsg] = useState(\"\"); // input: JOSN containing Grammar, Feedback from cyclops and the parse table\n  // returns: blocks of <div> displaying Grammar, parse table and feedback (in the given order)\n\n  function Display() {\n    if (parsetable === \"\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }\n      }, \" \");\n    } else {\n      var jsonD = JSON.parse(parsetable);\n      const grammarDiv = jsonD[\"Grammar\"].map(ele => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, ele));\n      const feedbackDiv = jsonD[\"Feedback\"].map(ele => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, ele)); //{'non_term' : 'A',\"a\" : 0,\"c\" : 3,\"b\" : 3,\"$\" : 0}\n\n      var ptKeys = Object.keys(jsonD[\"ParseTable\"][0]).map(ele => ele);\n      var ptHead = [\"non_term\"];\n      var ptHeadD = [\"Non-Term\"];\n\n      for (let i = 0; i < ptKeys.length; i++) {\n        if (\"non_term\" !== ptKeys[i]) {\n          ptHead.push(ptKeys[i]);\n          ptHeadD.push(ptKeys[i]);\n        }\n      }\n\n      const ptHeadDiv = ptHeadD.map(ele => /*#__PURE__*/React.createElement(\"th\", {\n        className: \"border border-slate-400 border-black text-lg\",\n        style: {\n          backgroundColor: \"darkslategrey\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, ele));\n      const ptBodyDiv = jsonD[\"ParseTable\"].map(ele => /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"border-4 border-slate-100 border-black text-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, ptHead.map(k => /*#__PURE__*/React.createElement(\"td\", {\n        className: \"border border-slate-100 border-black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 32\n        }\n      }, \" \", ele[k], \" \"))));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-col container grid grid-cols-1 gap-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"font-mono flex flex-col justify-center gap-2 text-bold border-2 bg-gray-200 col-span-1\\r border-blue-500 px-5 py-5   p-6 rounded-lg shadow-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"font-mono flex flex-row justify-center gap-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bg-yellow-100 border-2 border-yellow-500 px-3 py-3 rounded-lg shadow-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        class: \"font-bold text-sm text-xl font-medium leading-normal mt-0 mb-2 text-blue-900 bg-red-200\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }\n      }, \"Grammar Provided:\"), /*#__PURE__*/React.createElement(\"ol\", {\n        className: \"text-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }\n      }, grammarDiv)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"px-3 py-3 bg-green-100 col-span-2\\r border-green-500 border-2 rounded-lg shadow-lg items-start justify-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"font-bold font-medium text-xl leading-normal mt-0 mb-2 text-blue-900 bg-red-200\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }, \"Parse Table :\"), /*#__PURE__*/React.createElement(\"table\", {\n        border: \"1\",\n        className: \"table table-auto table-striped border-black border border-slate-400 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, ptHeadDiv, ptBodyDiv)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"font-bold text-red-900\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-mono\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 61\n        }\n      }, \"'eps'\"), \" represents \", /*#__PURE__*/React.createElement(Latex, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 113\n        }\n      }, \"$\\\\epsilon$ \"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bg-gray-200 border-2 border-blue-500 px-3 py-3 rounded-lg shadow-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        class: \"font-bold font-medium text-xl text-sm mt-0 mb-2 text-blue-900 bg-yellow-200\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }, \"Feedback provided by Cyclops :\"), /*#__PURE__*/React.createElement(\"ol\", {\n        className: \"list-decimal font-medium text-lg text-sm mt-0 mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 18\n        }\n      }, feedbackDiv)));\n    }\n  }\n\n  function page() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-blue-800 font-bold text-xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \" Enter the passcode \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login flex flex-row items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"shadow-sm font-mono appearance-none block text-gray-700 font-bold\",\n      type: \"text\",\n      value: passcode,\n      onChange: handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"text-center text-white-400 font-bold rounded-lg py-1 px-1\\r focus:outline-none bg-green-300 border-2 shadow-lg border-green-600\",\n      id: \"submit\",\n      name: \"check\",\n      value: \"check\",\n      type: \"submit\",\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, \"Load\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      title: \"Grammar\",\n      endpoint: \"getgrammar\",\n      value: grammar,\n      changeHook: grammarChanged,\n      query: null,\n      optionlist: grammarlist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      title: \"Task\",\n      endpoint: \"gettask\",\n      value: task,\n      changeHook: taskChanged,\n      query: grammar,\n      optionlist: tasklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Display, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-xl font-bold leading-normal mt-0 mb-2 text-blue-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, \"Solution :\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \" form-control\\r font-mono\\r block\\r w-full\\r h-64\\r px-3\\r py-2\\r text-base\\r font-normal\\r text-gray-700\\r bg-yellow-100 bg-clip-padding\\r border-2 border-solid border-gray-700\\r rounded\\r transition\\r ease-in-out\\r m-0\\r focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\\r border-2\",\n      value: solution,\n      onChange: e => {\n        setSolution(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-xl font-bold leading-normal mt-0 mb-2 text-blue-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, \"Tool Feedback :\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\\r h-64\\r block\\r font-mono\\r w-full\\r px-3\\r py-2\\r text-base\\r font-normal\\r bg-yellow-100\\r text-gray-700\\r bg-white bg-clip-padding\\r border-2 border-solid border-gray-700\\r rounded\\r transition\\r ease-in-out\\r m-0\\r focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\\r border-2\",\n      value: feedback,\n      onChange: e => {\n        setFeedback(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-row content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"text-center text-red-900 font-bold rounded-lg py-1 px-1\\r w-2/12 focus:outline-none bg-red-100 border-2 shadow-lg border-red-700\",\n      id: \"submit\",\n      name: \"submit\",\n      value: \"submit\",\n      type: \"submit\",\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" text-red-900\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, finalmsg)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }));\n  } // e is the event object (\"target\" is a property of the event object. https://www.w3schools.com/jsref/obj_event.asp)\n\n\n  const handleInput = e => {\n    setPasscode(e.target.value);\n    console.log(\"Got \" + e.target.value);\n  };\n\n  function handleClick() {\n    console.log(\"Hello\" + passcode);\n    setGrammar(\"\");\n    setTask(\"\");\n    setParseTable(\"\");\n    setSolution(\"\");\n    setFeedback(\"\");\n    setFinalMsg(\"\");\n    LoadProblem(passcode); //       return (\n    //           <LoadProblem value={passcode.value} />\n    //      )\n  }\n\n  function handleSubmit(endpoint) {\n    try {\n      return fetch(SERVER + \"soln\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json' //        'Access-Control-Allow-Origin': '*',\n          //        'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, DELETE',\n          //        'Access-Control-Max-Age': '3600',\n          //        'Access-Control-Allow-Headers': 'Content-Type, Origin, Cache-Control, X-Requested-With',\n          //        'Access-Control-Allow-Credentials': 'true'\n\n        },\n        body: JSON.stringify({\n          'passcode': passcode,\n          'grammar': grammar,\n          'task': task,\n          'solution': solution,\n          'feedback': feedback\n        })\n      }).then(response => response.json()).then(data => {\n        setGrammar(\"\");\n        setTask(\"\");\n        setParseTable(\"\");\n        setSolution(\"\");\n        setFeedback(\"\");\n        setFinalMsg(data['result']);\n        return data;\n      }) //})\n      .catch(console.log(\"Got POST fetch error\\n\")); //       return (\n      //           <LoadProblem value={passcode.value} />\n      //      )\n    } catch (err) {\n      console.log(err);\n    } //.then(e => {console.log(e.body.json);\n\n  }\n\n  function grammarChanged(e) {\n    setGrammar(e.target.value); // setGrammar(\"\");\n\n    setTask(\"\");\n    setParseTable(\"\");\n    setSolution(\"\");\n    setFeedback(\"\");\n    setFinalMsg(\"\");\n    console.log(\"Grammar: \" + e.target.value); //useEffect(() => {\n\n    contactServer(\"gettask\", \"grammar=\" + e.target.value).then(g => setTaskList(g)); //}, []);\n    //LoadProblem(passcode);\n    //       return (\n    //           <LoadProblem value={passcode.value} />\n    //      )\n  }\n\n  function LoadProblem(msg) {\n    console.log(\"World\" + msg); //const passcode = this.refs[this.state.passcode].value;\n    //const passcode = document.getElementById(\"passcode\").value;\n\n    const passcode = msg; //document.querySelector(\"login\").value;\n    //useEffect(() => {\n\n    contactServer(\"getgrammar?passcode=\" + passcode, null).then(g => setGrammarList(g)); //}, []);\n\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }, \" Hello \");\n  }\n\n  function taskChanged(e) {\n    setTask(e.target.value);\n    console.log(\"Task: \" + e.target.value); //useEffect(() => {\n\n    contactServer(\"getparsetable\", \"grammar=\" + grammar + \"&task=\" + e.target.value).then(g => setParseTable(g)); //}, []);\n    //LoadProblem(passcode);\n    //       return (\n    //           <LoadProblem value={passcode.value} />\n    //      )\n  } // <input ref={passcode} type = \"text\" id=\"passcode\" defaultValue=\"Hi\"></input>\n  // <textarea ref={passcode} id=\"passcode\" defaultValue=\"Hi\"></textarea>\n  //<label id=\"Roll no.: \">{passcode.value}</label>\n\n\n  return page();\n}\n\nexport default Solve;","map":{"version":3,"sources":["C:/Users/shash/OneDrive/Desktop/Cyclopslogin/src/Solve.js"],"names":["React","useState","useEffect","useRef","Latex","require","SERVER","contactServer","endpoint","query","fetchlink","fetch","method","then","response","json","data","console","log","catch","Solve","passcode","setPasscode","grammar","setGrammar","task","setTask","grammarlist","setGrammarList","tasklist","setTaskList","parsetable","setParseTable","solution","setSolution","feedback","setFeedback","finalmsg","setFinalMsg","Display","jsonD","JSON","parse","grammarDiv","map","ele","feedbackDiv","ptKeys","Object","keys","ptHead","ptHeadD","i","length","push","ptHeadDiv","backgroundColor","color","ptBodyDiv","k","page","handleInput","handleClick","grammarChanged","taskChanged","e","target","value","handleSubmit","LoadProblem","headers","body","stringify","err","g","msg"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport './style.css';\r\nvar Latex = require('react-latex');\r\n//import './css/main.css';\r\n// import './custom.css';\r\n// import './minty.css';\r\n// import './zephyr.css';\r\n\r\n// change it to cyclops.cse.iitk.ac.in\r\n//const SERVER=\"http://cyclops.cse.iitk.ac.in:5000/\"\r\n const SERVER=\"http://localhost:5000/\"\r\n\r\nasync function contactServer(endpoint, query) {\r\n    var fetchlink\r\n    if (query == null)\r\n        fetchlink = SERVER + endpoint\r\n    else\r\n        fetchlink = SERVER + endpoint + \"?\" + query\r\n    return fetch(fetchlink, {method : \"GET\"})\r\n.then(response => response.json())\r\n.then(data => {console.log(\"Sending request for \" + fetchlink + \" \\n\"); return data;})\r\n.catch(console.log(\"Got error\\n\"));\r\n}\r\n\r\n//const passcode = React.createRef();\r\nfunction Solve() {\r\n    const [passcode, setPasscode] = useState(\"\");\r\n    const [grammar, setGrammar] = useState(\"\");\r\n    const [task, setTask] = useState(\"\");\r\n    const [grammarlist, setGrammarList] = useState(\"\");\r\n    const [tasklist, setTaskList] = useState(\"\");\r\n    const [parsetable, setParseTable] = useState(\"\");\r\n    const [solution, setSolution] = useState(\"\");\r\n    const [feedback, setFeedback] = useState(\"\");\r\n    const [finalmsg, setFinalMsg] = useState(\"\");\r\n\r\n    // input: JOSN containing Grammar, Feedback from cyclops and the parse table\r\n    // returns: blocks of <div> displaying Grammar, parse table and feedback (in the given order)\r\n    function Display() {\r\n        if(parsetable === \"\"){\r\n            return ( <div> </div>)\r\n        }\r\n        else{\r\n        var jsonD = JSON.parse(parsetable)\r\n        const grammarDiv = jsonD[\"Grammar\"].map((ele) =>\r\n                <li>{ele}</li>\r\n            )\r\n        const feedbackDiv = jsonD[\"Feedback\"].map((ele) =>\r\n                <li>{ele}</li>\r\n            )\r\n\r\n        //{'non_term' : 'A',\"a\" : 0,\"c\" : 3,\"b\" : 3,\"$\" : 0}\r\n        var ptKeys = Object.keys(jsonD[\"ParseTable\"][0]).map((ele) =>\r\n                    ele\r\n            )\r\n\r\n        var ptHead = [\"non_term\"];\r\n        var ptHeadD = [\"Non-Term\"]\r\n        for(let i =0; i < ptKeys.length; i++){\r\n            if( \"non_term\" !== ptKeys[i]){\r\n                ptHead.push(ptKeys[i])\r\n                ptHeadD.push(ptKeys[i])\r\n            }\r\n        }\r\n\r\n        const ptHeadDiv = ptHeadD.map((ele) =>\r\n                <th className=\"border border-slate-400 border-black text-lg\" style={{backgroundColor: \"darkslategrey\", color: \"white\"}}>{ele}</th>\r\n        )\r\n\r\n        const ptBodyDiv = jsonD[\"ParseTable\"].map((ele) =>\r\n            <tr className=\"border-4 border-slate-100 border-black text-lg\">\r\n            {ptHead.map((k) => <td className=\"border border-slate-100 border-black\"> {ele[k]} </td> )}\r\n            </tr>\r\n        )\r\n        return (\r\n\r\n                <div className=\"flex flex-col container grid grid-cols-1 gap-2\">\r\n                {/* Sumit : Edited this */}\r\n                <div className=\"font-mono flex flex-col justify-center gap-2 text-bold border-2 bg-gray-200 col-span-1\r\n                  border-blue-500 px-5 py-5   p-6 rounded-lg shadow-lg\">\r\n                    <div className=\"font-mono flex flex-row justify-center gap-2\">\r\n                    <div className=\"bg-yellow-100 border-2 border-yellow-500 px-3 py-3 rounded-lg shadow-lg\">\r\n                     <h6 class=\"font-bold text-sm text-xl font-medium leading-normal mt-0 mb-2 text-blue-900 bg-red-200\">\r\n                      Grammar Provided:\r\n                        </h6>\r\n                      <ol className=\"text-lg\">{grammarDiv}</ol>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"px-3 py-3 bg-green-100 col-span-2\r\n                      border-green-500 border-2 rounded-lg shadow-lg items-start justify-start\">\r\n                            <h6 className=\"font-bold font-medium text-xl leading-normal mt-0 mb-2 text-blue-900 bg-red-200\">\r\n                                Parse Table :\r\n                            </h6>\r\n                            <table border=\"1\" className=\"table table-auto table-striped border-black border border-slate-400 \">\r\n                                <thead>\r\n                                {ptHeadDiv}\r\n                                {ptBodyDiv}\r\n                                </thead>\r\n                            </table>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"font-bold text-red-900\"><span className=\"font-mono\">'eps'</span> represents <Latex>$\\epsilon$ </Latex></div>\r\n                </div>\r\n                    <br />\r\n                <div className=\"bg-gray-200 border-2 border-blue-500 px-3 py-3 rounded-lg shadow-lg\">\r\n                  <h6 class=\"font-bold font-medium text-xl text-sm mt-0 mb-2 text-blue-900 bg-yellow-200\">\r\n                   Feedback provided by Cyclops :\r\n                 </h6>\r\n                 <ol className=\"list-decimal font-medium text-lg text-sm mt-0 mb-2\">{feedbackDiv}</ol>\r\n                 </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function page() {\r\n        return (\r\n        <div>\r\n\r\n            <span className=\"px-1\"></span>\r\n            <div className=\"text-blue-800 font-bold text-xl\"> Enter the passcode </div>\r\n        <div className='login flex flex-row items-center'>\r\n            {/* Sumit : Edited this */}\r\n            <input className=\"shadow-sm font-mono appearance-none block text-gray-700 font-bold\"\r\n                type=\"text\" value={passcode} onChange={handleInput} />\r\n            {/* Sumit : Edited this */}\r\n            <span className=\"px-1\"></span>\r\n            <button className=\"text-center text-white-400 font-bold rounded-lg py-1 px-1\r\n                focus:outline-none bg-green-300 border-2 shadow-lg border-green-600\" id=\"submit\" name=\"check\" value=\"check\" type=\"submit\"\r\n                  onClick={handleClick}>Load</button>\r\n            {/* Sumit : Added this for small space this */}\r\n            <span className=\"px-1\"></span>\r\n            {/*<button className=\"text-center text-black-700 font-bold rounded-lg py-1 px-1*/}\r\n            {/* focus:outline-none bg-blue-300 border-2 shadow-lg border-blue-700\" id=\"reset\" name=\"reset\" value=\"reset\" type=\"submit\"*/}\r\n            {/*    onClick={() => window.location.reload(false)}>Reset</button>*/}\r\n        </div>\r\n        <div className='container'>\r\n        <table>\r\n        <tr>\r\n          <th>\r\n            <Selector title='Grammar' endpoint=\"getgrammar\" value={grammar} changeHook={grammarChanged} query={null} optionlist = {grammarlist} />\r\n            </th>\r\n          <th>\r\n            <Selector title='Task' endpoint=\"gettask\" value={task} changeHook={taskChanged} query={grammar} optionlist = {tasklist} />\r\n            </th>\r\n        </tr>\r\n        </table>\r\n        </div>\r\n        <div>\r\n\r\n        {/* <textarea value = {parsetable} /> */}\r\n        <Display></Display>\r\n        <br />\r\n        {/* Sumit : Edited this */}\r\n        <h4 className=\"text-xl font-bold leading-normal mt-0 mb-2 text-blue-700\">\r\n         Solution :\r\n       </h4>\r\n       {/* Sumit : Edited this */}\r\n        <textarea className=\" form-control\r\n        font-mono\r\n        block\r\n        w-full\r\n        h-64\r\n        px-3\r\n        py-2\r\n        text-base\r\n        font-normal\r\n        text-gray-700\r\n        bg-yellow-100 bg-clip-padding\r\n        border-2 border-solid border-gray-700\r\n        rounded\r\n        transition\r\n        ease-in-out\r\n        m-0\r\n        focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\r\n        border-2\" value = {solution} onChange = {e => {setSolution(e.target.value)}} />\r\n        <br />\r\n        <h4 className=\"text-xl font-bold leading-normal mt-0 mb-2 text-blue-700\">\r\n         Tool Feedback :\r\n       </h4>\r\n       {/* Sumit : Edited this */}\r\n        <textarea className=\"form-control\r\n        h-64\r\n        block\r\n        font-mono\r\n        w-full\r\n        px-3\r\n        py-2\r\n        text-base\r\n        font-normal\r\n        bg-yellow-100\r\n        text-gray-700\r\n        bg-white bg-clip-padding\r\n        border-2 border-solid border-gray-700\r\n        rounded\r\n        transition\r\n        ease-in-out\r\n        m-0\r\n        focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\r\n        border-2\"  value = {feedback} onChange = {e => {setFeedback(e.target.value)}} />\r\n        <br />\r\n        </div >\r\n            <div className=\"flex flex-row content-center\">\r\n            <button className=\"text-center text-red-900 font-bold rounded-lg py-1 px-1\r\n              w-2/12 focus:outline-none bg-red-100 border-2 shadow-lg border-red-700\" id=\"submit\" name=\"submit\" value=\"submit\" type=\"submit\" onClick={handleSubmit}>Submit</button>\r\n            <span className=\"px-2\"></span>\r\n            <div className=\" text-red-900\">{finalmsg}</div>\r\n        </div><span className=\"px-2\"></span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    // e is the event object (\"target\" is a property of the event object. https://www.w3schools.com/jsref/obj_event.asp)\r\n  const handleInput = (e) => {setPasscode(e.target.value); console.log(\"Got \" + e.target.value);}\r\n\r\n    function handleClick() {\r\n        console.log(\"Hello\" + passcode);\r\n        setGrammar(\"\");\r\n        setTask(\"\");\r\n        setParseTable(\"\");\r\n        setSolution(\"\");\r\n        setFeedback(\"\");\r\n        setFinalMsg(\"\");\r\n        LoadProblem(passcode);\r\n //       return (\r\n //           <LoadProblem value={passcode.value} />\r\n  //      )\r\n    }\r\n\r\nfunction handleSubmit(endpoint) {\r\n    try {\r\n  return fetch(SERVER + \"soln\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n//        'Access-Control-Allow-Origin': '*',\r\n//        'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, DELETE',\r\n//        'Access-Control-Max-Age': '3600',\r\n//        'Access-Control-Allow-Headers': 'Content-Type, Origin, Cache-Control, X-Requested-With',\r\n//        'Access-Control-Allow-Credentials': 'true'\r\n      },\r\n      body: JSON.stringify({\r\n        'passcode': passcode,\r\n        'grammar': grammar,\r\n        'task': task,\r\n        'solution': solution,\r\n        'feedback': feedback,\r\n      })\r\n}).then(response => response.json())\r\n.then(data => {setGrammar(\"\");\r\nsetTask(\"\");\r\nsetParseTable(\"\");\r\nsetSolution(\"\");\r\nsetFeedback(\"\");\r\nsetFinalMsg(data['result']); return data;})\r\n    //})\r\n.catch(console.log(\"Got POST fetch error\\n\"));\r\n //       return (\r\n //           <LoadProblem value={passcode.value} />\r\n  //      )\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n//.then(e => {console.log(e.body.json);\r\n    }\r\n\r\n    function grammarChanged(e) {\r\n        setGrammar(e.target.value);\r\n        // setGrammar(\"\");\r\n        setTask(\"\");\r\n        setParseTable(\"\");\r\n        setSolution(\"\");\r\n        setFeedback(\"\");\r\n        setFinalMsg(\"\");\r\n        console.log(\"Grammar: \" + e.target.value);\r\n    //useEffect(() => {\r\n        contactServer(\"gettask\", \"grammar=\" + e.target.value)\r\n        .then(g => setTaskList(g));\r\n    //}, []);\r\n        //LoadProblem(passcode);\r\n //       return (\r\n //           <LoadProblem value={passcode.value} />\r\n  //      )\r\n    }\r\n\r\nfunction LoadProblem(msg) {\r\n    console.log(\"World\" + msg);\r\n    //const passcode = this.refs[this.state.passcode].value;\r\n    //const passcode = document.getElementById(\"passcode\").value;\r\n    const passcode = msg; //document.querySelector(\"login\").value;\r\n    //useEffect(() => {\r\n        contactServer(\"getgrammar?passcode=\" + passcode, null)\r\n        .then(g => setGrammarList(g));\r\n    //}, []);\r\n    return (\r\n        <h1> Hello </h1>\r\n    )\r\n}\r\n    function taskChanged(e) {\r\n        setTask(e.target.value);\r\n        console.log(\"Task: \" + e.target.value);\r\n    //useEffect(() => {\r\n        contactServer(\"getparsetable\", \"grammar=\" + grammar + \"&task=\" + e.target.value)\r\n        .then(g => setParseTable(g));\r\n    //}, []);\r\n        //LoadProblem(passcode);\r\n //       return (\r\n //           <LoadProblem value={passcode.value} />\r\n  //      )\r\n    }\r\n           // <input ref={passcode} type = \"text\" id=\"passcode\" defaultValue=\"Hi\"></input>\r\n           // <textarea ref={passcode} id=\"passcode\" defaultValue=\"Hi\"></textarea>\r\n        //<label id=\"Roll no.: \">{passcode.value}</label>\r\n    return (page())\r\n}\r\n\r\n\r\nexport default Solve\r\n"]},"metadata":{},"sourceType":"module"}