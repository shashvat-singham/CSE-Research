[{"C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\index.js":"1","C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\New.js":"2","C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\reportWebVitals.js":"3","C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\View.js":"4","C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\Solve.js":"5","C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\components\\Selector.js":"6","C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\index.js":"7","C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\New.js":"8","C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\reportWebVitals.js":"9","C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\Solve.js":"10","C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\View.js":"11","C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\components\\Selector.js":"12"},{"size":592,"mtime":1663046229553,"results":"13","hashOfConfig":"14"},{"size":15438,"mtime":1663046229523,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1663046229556,"results":"16","hashOfConfig":"14"},{"size":4586,"mtime":1663046229530,"results":"17","hashOfConfig":"14"},{"size":12411,"mtime":1663046229528,"results":"18","hashOfConfig":"14"},{"size":2227,"mtime":1663046229536,"results":"19","hashOfConfig":"14"},{"size":592,"mtime":1663046229553,"results":"20","hashOfConfig":"21"},{"size":15438,"mtime":1663046229523,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1663046229556,"results":"23","hashOfConfig":"21"},{"size":12411,"mtime":1663046229528,"results":"24","hashOfConfig":"21"},{"size":4586,"mtime":1663046229530,"results":"25","hashOfConfig":"21"},{"size":2227,"mtime":1663046229536,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3cda7l",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"137amh6",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\index.js",[],[],"C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\New.js",["67","68","69","70","71","72","73","74"],[],"import React, { Component } from 'react';\r\nimport { HashRouter, Route, Routes, NavLink } from 'react-router-dom';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport pk from './images/pp.jpeg';\r\nimport sl from './images/sumit.jpeg';\r\nimport sr from './images/subhajit.png';\r\nimport Solve from './Solve';\r\nimport View from './View';\r\nimport styled from 'styled-components';\r\nimport Frame from 'react-frame-component';\r\nvar Latex = require('react-latex');\r\n\r\n\r\n\r\n\r\n//import { Header } from 'react-native-elements';\r\n//import LinearGradient from 'react-native-linear-gradient';\r\n\r\n//import { Header as HeaderRNE, HeaderProps, Icon } from 'react-native-elements';\r\n//import { TouchableOpacity } from 'react-native-gesture-handler';\r\n//import { SafeAreaProvider } from 'react-native-safe-area-context';\r\n\r\n\r\n//import About from './components/About';\r\n//import Contact from './components/Contact';\r\n//import Error from './components/Error';\r\n//import Navigation from './components/Navigation';\r\n \r\n//             <Route path=\"/about\" component={About}/>\r\n//             <Route path=\"/contact\" component={Contact}/>\r\n//            <Route component={Error}/>\r\n\r\n//          <NavLink to=\"/about\">About</NavLink>\r\n//          <NavLink to=\"/contact\">Contact</NavLink>\r\n\r\nconst Navigation = () => {\r\n    return (\r\n       <div>\r\n        <NavList>\r\n          <NavLink to=\"/\"> Home &nbsp;&nbsp; </NavLink>\r\n          <NavLink to=\"/solve\"> Solve &nbsp;&nbsp; </NavLink>\r\n          <NavLink to=\"/view\"> View &nbsp;&nbsp; </NavLink>\r\n          <NavLink to=\"/about\"> About &nbsp;&nbsp; </NavLink>\r\n        </NavList>\r\n        <hr/>\r\n       </div>\r\n    );\r\n}\r\n\r\nconst Home = () => {\r\n    return (\r\n       <div>\r\n        <span className=\"px-1\"></span>\r\n           <div className=\"flex flex-col gap-2 font-sans justify-center text-bold border-2 col-span-1 bg-gray-100\r\n                  border-gray-500 px-5 py-5  p-6 rounded-lg shadow-lg text-lg\">\r\n              <p> For any technical difficulties or bugs regarding this site please send a mail to <span className=\"font-mono bg-yellow-200\">pkalita@cse.iitk.ac.in</span> and <span className=\"font-mono bg-yellow-200\">subhajit@iitk.ac.in</span>.</p>\r\n           </div>\r\n            <span className=\"px-1\"></span>\r\n          <div className=\"flex flex-col gap-2 font-sans justify-center text-bold border-2 col-span-1 bg-gray-100\r\n                  border-gray-500 px-5 py-5  p-6 rounded-lg shadow-lg text-lg\">\r\n\r\n              <h4 className=\"font-bold text-xl\">Problem statement:</h4>\r\n              <p >Your group was asked to create an LL(1) parser for a given grammar.\r\n                  As you were busy, your group members finished the assignment and sent the solution to you for verification.\r\n              Clever you---you decided to use <a href=\"http://jsmachines.sourceforge.net/machines/ll1.html\" className=\"text-blue-600 font-bold\"> LL(1) parser generator </a>  to check the solution.\r\n              But, to your dismay the constructed parse table is wrong!\r\n              </p><p>\r\n              Now, you know that your group members are careful, they could have created <em><b> exactly one error </b></em>\r\n              while following the steps to LL(1) parser creation.\r\n              To be more precide, they made a mistake in exactly one constraint of <Link  className=\"text-blue-600 font-bold\" to=\"./#firstSet\">first set</Link>, <Link className=\"text-blue-600 font-bold\" to=\"./#followSet\">follow set </Link>\r\n              and <Link className=\"text-blue-600 font-bold\" to=\"./#parseTable\">parse table</Link> construction---at that too on a single non-terminal/terminal/production.\r\n              You are required to locate the bug.\r\n               </p><p>\r\n              For your assistance, we have provided a bot,\r\n              <span className=\"text-blue-600 font-bold\"> Cyclops </span> <sup><Link to=\"./#paper1\" id=\"ref1\">1</Link></sup>,\r\n              that will help you debug the fault. Given a grammar and an incorrect parse table,\r\n              it ranks the potential error and you may use it for directing your debugging effort.\r\n              Like you, Cyclops does not have any idea of the error and hence, the actual fault may not appear at the top of the ranked list,\r\n              or may not appear at all.\r\n           </p><p>\r\n              Your TA would have provided a passcode to access the site (and identify your group).\r\n              You should attempt the Grammar/Tasks assigned to you (we have kept all tasks open, in case you want to explore other tasks too);\r\n              however, only the tasks assigned to you will be graded.\r\n           </p><p>\r\n              We provide a possible sample solution that we expect from you:\r\n              <span className=\"text-red-900 font-bold\"> <Latex>The error was in the second constraint of First Set\r\n              construction corresponding to the non-terminal '$A$'. The terminal '$b$' was present as the first symbol in the body of\r\n              production  $A \\rightarrow b\\ A\\ c$ , and hence, should have been included in the first-set of '$A$'.\r\n              Adding '$b$' to $FIRST(A)$, adds $A \\rightarrow b\\ A\\ c$ to the parse table corresponding to non-terminal '$A$' and\r\n              lookahead '$b$'. This is the correct parse table.</Latex></span>\r\n           </p><p>\r\n              You must provide an honest feedback about if <span className=\"text-blue-600 font-bold\"> Cyclops </span> helped you solve the problem and how (about 50 words).\r\n              We will grade you on the quality of this feedback.\r\n              Please be honest; both positive and negative feedback is equally important to us.\r\n           </p><p className=\"font-bold\">\r\n              Important: We intend to use your (anonymized) feedback in future publications.\r\n              We assume that you provide your consent for the same when you provide feedback.\r\n              In case you are not comfortable with the same, please send a mail to <span className=\"font-mono bg-yellow-200\">subhajit@iitk.ac.in</span> and <span className=\"font-mono bg-yellow-200\">pkalita@cse.iitk.ac.in</span>.\r\n            </p>\r\n          </div>\r\n        <span className=\"px-1\"></span>\r\n           <div className=\"font-mono flex flex-col justify-center gap-6 text-bold border-2 bg-gray-100 col-span-1\r\n                  border-gray-500 px-5 py-5  p-6 rounded-lg shadow-lg text-lg\">\r\n            <h4 className=\"font-bold text-xl font-sans\"><a id=\"firstSet\">Constraints for parse table creation:</a></h4>\r\n                <div className=\"font-mono flex flex-col justify-center gap-6 text-bold border-2 bg-red-200\r\n                  border-red-200  p-5 rounded-lg shadow-lg\">\r\n                <div className=\"font-mono font-bold bg-yellow-200\">First set constraints:</div>\r\n                <ol className=\"list-decimal \">\r\n                  <li> If <Latex> $X$ </Latex> is a  terminal symbol then <Latex> $FIRST(X) = &#123;X&#125;$.</Latex> </li>\r\n                     <li>\r\n                        If <Latex> $X$ </Latex> is a non terminal symbol and <Latex>$X \\rightarrow Y_1, Y_2,\\ldots Y_k $</Latex> is a production, then\r\n                         <br></br> &nbsp;&nbsp;If for some <Latex>$i$, $a$ is in $FIRST(Y_i)$ and $\\epsilon$ is in all of $FIRST(Y_j)$ (such that $j &lt; i$)</Latex> then\r\n                         <br></br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Latex>$a$ is in $FIRST(X)$. </Latex>\r\n                         <br></br> &nbsp;&nbsp;<Latex>If $\\epsilon$ is in $FIRST(Y_1) \\ldots FIRST(Y_k)$ then $\\epsilon$ is in $FIRST(X)$.</Latex>\r\n                    </li>\r\n                   <li>If <Latex> $X \\rightarrow \\epsilon$ is a production then $\\epsilon$ is in $FIRST(X)$.</Latex> </li>\r\n                </ol>\r\n                </div>\r\n\r\n               <div className=\"font-mono flex flex-col justify-center gap-6 text-bold border-2 bg-red-200\r\n                  border-red-200  p-5 rounded-lg shadow-lg\">\r\n                <div className=\"font-mono font-bold bg-yellow-200\"><a id=\"followSet\">Follow set constraints:</a></div>\r\n                <ol className=\"list-decimal \">\r\n                  <li>  <Latex>Place $&dollar;$ in $FOLLOW(S)$, where $S$ is the start symbol and $&dollar;$  is the input right endmarker</Latex>. </li>\r\n                  <li> <Latex> If there is a production $A \\rightarrow \\alpha B \\beta$, then everything in $FIRST(\\beta)$ except $\\epsilon$ is in $FOLLOW(B)$ </Latex>.</li>\r\n                  <li><Latex> If there is a production $A \\rightarrow \\alpha B$, or a production $A \\rightarrow \\alpha B \\beta$, where $FIRST(\\beta)$ contains\r\n                    $\\epsilon$, then everything in $FOLLOW(A)$ is in $FOLLOW(B)$.</Latex></li>\r\n                </ol>\r\n                </div>\r\n\r\n               <div className=\"font-mono flex flex-col justify-center gap-6 text-bold border-2 bg-red-200\r\n                  border-red-200  p-5 rounded-lg shadow-lg\">\r\n                   <div className=\"font-mono font-bold bg-yellow-200\"><a id=\"parseTable\">Parse Table set constraints:</a></div>\r\n                   <ol className=\"list-decimal \">\r\n                       <li><Latex> For each terminal $a$ in $FIRST(\\alpha)$, add $A \\rightarrow \\alpha$ to $M[A, a]$.</Latex></li>\r\n                       <li> <Latex> If $\\epsilon$ is in $FIRST(\\alpha)$, then for each terminal $b$ in $FOLLOW(A)$,\r\n                       add $A \\rightarrow \\alpha$ to $M[A, b]$.\r\n                          If $\\epsilon$ is in $FIRST(\\alpha)$ and $&dollar;$ is in $FOLLOW(A)$ add $A \\rightarrow \\alpha$ to $M[A,$ $&dollar;$$]$ as well.\r\n                       </Latex> </li>\r\n                   </ol>\r\n               </div>\r\n           </div>\r\n                <span className=\"px-1\"></span>\r\n           <br/><br/>\r\n        <div>\r\n        <span className=\"px-2.5\"></span>\r\n        <sup id=\"paper1\" className=\"text-base\" >1. Dhruv Singal, Palak Agarwal, Saket Jhunjhunwala and Subhajit Roy.\r\n            <a href=\"https://easychair.org/publications/paper/DtjZ\" className=\"text-blue-600 font-bold\">Parse Condition: Symbolic Encoding of LL(1) Parsing</a>.\r\n            In LPAR-22. 22nd International Conference on Logic for Programming, Artificial Intelligence and Reasoning, Awassa, Ethiopia,\r\n            16-21 November. 2018. <Link to=\"./#ref1\" >↩</Link></sup>\r\n            </div>\r\n           <span className=\"px-2.5\"></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n//const View = () => {\r\n//    return (\r\n//       <div>\r\n//          <h1>Home</h1>\r\n//           <p>Home page body content</p>\r\n//       </div>\r\n//    );\r\n//}\r\n\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n       <div>\r\n           <span className=\"px-1\"></span>\r\n          <div className=\"font-sans font-bold text-2xl\" >About</div>\r\n           <div className=\"font-sans text-1xl\">\r\n               Cyclops is a software system for teaching LL(1) parsing. Cyclops provides an interactive environment to learn LL(1) parsing.\r\n               It uses formal method techniques (i.e., SMT solvers) to give feedback to the user in case of wrong entries of the <a href=\"https://en.wikipedia.org/wiki/LL_parser#Constructing_an_LL(1)_parsing_table\"> LL(1) parse table</a>.\r\n               Cyclops is built on the published work <a className=\"text-blue-700\" href=\"https://easychair.org/publications/paper/DtjZ\"> <b> Parse Condition: Symbolic Encoding of LL(1) Parsing</b></a>.\r\n           </div>\r\n           <span className=\"px-1\"></span>\r\n           <div className=\"font-sans font-bold text-2xl\" >Publications: </div>\r\n           <ul className=\"list-disc\">\r\n               <li className=\"font-sans text-1xl\">Dhruv Singal, Palak Agarwal, Saket Jhunjhunwala and Subhajit Roy. <b>Parse Condition: Symbolic Encoding of LL(1) Parsing</b>.\r\n                   In LPAR-22. 22nd International Conference on Logic for Programming,\r\n                   Artificial Intelligence and Reasoning, Awassa, Ethiopia, 16-21 November. 2018. </li>\r\n           </ul>\r\n            <span className=\"px-1\"></span>\r\n           <div className=\"font-sans font-bold text-2xl\" >Team </div>\r\n           <div className=\"font-mono flex flex-row  justify-center items-center gap-8 text-bold border-2 bg-gray-200 col-span-1\r\n                  border-gray-500 px-5 py-5  p-6 rounded-lg shadow-lg\">\r\n\r\n                <div className=\"font-mono flex flex-col items-center justify-center gap-2 font-bold border-2 bg-red-200 text-lg\r\n                  border-red-200  p-5 rounded-lg shadow-lg \">\r\n                    <a href=\"https://www.cse.iitk.ac.in/users/pkalita/\">\r\n                    <img src = {pk}/>\r\n                    </a>\r\n                    <div>\r\n                    Pankaj Kumar Kalita\r\n                    </div><div>\r\n                    PhD student\r\n                    </div>\r\n\r\n                    </div>\r\n               <div className=\"font-mono flex flex-col items-center justify-center gap-2 font-bold border-2 bg-red-200 text-lg\r\n                  border-red-200  p-5 rounded-lg shadow-lg \">\r\n                   <a href=\"https://www.cse.iitk.ac.in/users/sumitl/\">\r\n                   <img src = {sl} /> </a>\r\n                   <div>\r\n                    Sumit Lahiri\r\n                    </div><div>\r\n                    PhD student\r\n                    </div>\r\n                    </div>\r\n               <div className=\"font-mono flex flex-col items-center justify-center gap-2 font-bold border-2 bg-red-200 text-lg\r\n                  border-red-200  p-5 rounded-lg shadow-lg \">\r\n                   <a href=\"https://www.cse.iitk.ac.in/users/subhajit/\">\r\n                   <img src = {sr} />\r\n                   </a>\r\n                   <div>\r\n                    Dr. Subhajit Roy\r\n                    </div><div>\r\n                    Associate Professor\r\n                    </div>\r\n               </div>\r\n\r\n           </div>\r\n       </div>\r\n    );\r\n}\r\n\r\nconst HeaderBar = styled.header`\r\n    width: 50%;\r\n    padding: 0.5em 1em;\r\n    display: flex;\r\n    height: 64px;\r\n    position: fixed;\r\n    align-items: center;\r\n    background-color: #cc0;\r\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.25);\r\n    z-index: 1;\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n    margin: 0;\r\n    padding: 1;\r\n    list-style: none;\r\n    line-height: 2;\r\n    background-color: #cca;\r\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.25);\r\n    a {\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n        font-size: 1.2em;\r\n        color: #333;\r\n        padding: 50;\r\n        margin: 20;\r\n    }\r\n    a:visited {\r\n        color: #333;\r\n    }\r\n    a:hover,\r\n    a:focus {\r\n        color: #0077cc;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\nreturn (\r\n    <div>\r\n    <HeaderBar>\r\n     <h1 class=\"font-bold font-normal leading-normal mt-0 mb-2 text-black-700 text-3xl\"> Fun with LL(1) </h1>\r\n    </HeaderBar>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n    </div>\r\n    );\r\n};\r\n\r\n          //ViewComponent={LinearGradient} // Don't forget this!\r\nfunction New() {\r\n    return (      \r\n       <div>\r\n       <div>\r\n        <Header />\r\n       </div>\r\n       <div>\r\n       <HashRouter>\r\n        <div>\r\n          <Navigation />\r\n            <Routes>\r\n             <Route path=\"/\" element={<Home />} exact/>\r\n             <Route path=\"/solve\" element={<Solve />} exact/>\r\n             <Route path=\"/view\" element={<View />} exact/>\r\n             <Route path=\"/about\" element={<About />} exact/>\r\n           </Routes>\r\n        </div> \r\n      </HashRouter>\r\n        </div> \r\n        </div> \r\n    );\r\n}\r\n \r\nexport default New;\r\n","C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\reportWebVitals.js",[],[],"C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\View.js",["75","76","77","78","79"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Selector from './components/Selector'\r\nimport ReactJson from 'react-json-view';\r\n\r\n// change it to cyclops.cse.iitk.ac.in\r\n//const SERVER=\"http://cyclops.cse.iitk.ac.in:5000/\"\r\n const SERVER=\"http://localhost:5000/\"\r\n\r\nasync function contactServer(endpoint, query) {\r\n    var fetchlink\r\n    if (query == null)\r\n        fetchlink = SERVER + endpoint\r\n    else\r\n        fetchlink = SERVER + endpoint + \"?\" + query\r\n    return fetch(fetchlink, {method : \"GET\"})\r\n.then(response => response.json())\r\n.then(data => {console.log(\"Sending request for \" + fetchlink + \" \\n\"); return data;})\r\n.catch(console.log(\"Got error\\n\"));\r\n}\r\n\r\n//const passcode = React.createRef();\r\nfunction View() {\r\n    const [passcode2, setPasscode2] = useState(\"\");\r\n    const [entries, setEntries] = useState(\"\");\r\n    function DisplayFiles() {\r\n        console.log(\"inview\" +  entries)\r\n        var fileDetails = (entries);\r\n        var files = Object.keys(fileDetails);\r\n        console.log(\"in dis \" + files)\r\n        var div = \"\"\r\n        if(files[0] === null || files === null){\r\n            return (<div>There is nothing to show.</div>);\r\n        }\r\n        else{\r\n        return (\r\n                <div>\r\n                    <span className=\"px-1\"></span>\r\n\r\n                    {files.map(f => (\r\n                        <div>\r\n\r\n                            <div className=\"flex flex-row \">\r\n\r\n                                <div className=\"font-bold text-gray-800\"> File Name: </div> <span className=\"px-1\"></span> <div className=\"text-blue-700 font-bold\">{ f.replace(\"\\\"\",\"\").replace(\"\\\"\",\"\") }</div>\r\n\r\n                            </div>\r\n                            <ReactJson name={false}\r\n                                       displayObjectSize={false}\r\n                                       displayDataTypes={false}\r\n                                       enableClipboard={false}\r\n                                       src={JSON.parse(fileDetails[f])} theme=\"monokai\" />\r\n                            <span className=\"px-1\"></span>\r\n                        </div>\r\n\r\n                    ))\r\n                    }\r\n                </div>\r\n            );\r\n        // }\r\n        }\r\n    }\r\n\r\n    function page() {\r\n        return (\r\n        <div><span className=\"px-1\"></span>\r\n             <div className=\"text-blue-800 font-bold\"> Enter the passcode </div>\r\n        <div className='login flex flex-row items-center'>\r\n            {/* Sumit : Edited this */}\r\n            <input className=\"shadow-sm font-mono appearance-none block text-gray-700 font-bold\"\r\n                type=\"text\" value={passcode2} onChange={handleInput} />\r\n            {/* Sumit : Edited this */}\r\n            <span className=\"px-1\"></span>\r\n            <button className=\"text-center text-white-400 font-bold rounded-lg py-1 px-1\r\n                focus:outline-none bg-green-300 border-2 shadow-lg border-green-600\" id=\"submit\" name=\"check\" value=\"check\" type=\"submit\"\r\n                  onClick={handleClick}>Check</button>\r\n            {/* Sumit : Added this for small space this */}\r\n            <span className=\"px-1\"></span>\r\n            {/*<button className=\"text-center text-blue-700 font-bold rounded-lg py-1 px-1*/}\r\n            {/* focus:outline-none bg-blue-300 border-2 shadow-lg border-blue-700\" id=\"reset\" name=\"reset\" value=\"reset\" type=\"submit\"*/}\r\n            {/*    onClick={() => window.location.reload(false)}>Reset</button>*/}\r\n        </div>\r\n        <div>\r\n            {entries ? <DisplayFiles></DisplayFiles> : \"\"}\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    // e is the event object (\"target\" is a property of the event object. https://www.w3schools.com/jsref/obj_event.asp)\r\n  const handleInput = (e) => {setPasscode2(e.target.value); console.log(\"Got \" + e.target.value);}\r\n\r\n    function handleClick() {\r\n        console.log(\"Hello\" + passcode2);\r\n        LoadProblem(passcode2);\r\n        //return (\r\n        //    <LoadProblem value={passcode.value} />\r\n        //)\r\n    }\r\n\r\nfunction LoadProblem(msg) {\r\n    console.log(\"World\" + msg);\r\n    //const passcode = this.refs[this.state.passcode].value;\r\n    //const passcode = document.getElementById(\"passcode\").value;\r\n    const passcode = msg; //document.querySelector(\"login\").value;\r\n    //useEffect(() => {\r\n        contactServer(\"getentries?passcode=\" + passcode2)\r\n        .then(e => setEntries(e))\r\n        .catch(console.log(\"View error\"));\r\n    //}, []);\r\n    //return (\r\n    //    <h1> Hi </h1>\r\n    //)\r\n}\r\n        return page()\r\n}\r\n\r\nexport default View\r\n","C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\Solve.js",["80","81","82"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Selector from './components/Selector'\r\nimport './style.css';\r\nvar Latex = require('react-latex');\r\n//import './css/main.css';\r\n// import './custom.css';\r\n// import './minty.css';\r\n// import './zephyr.css';\r\n\r\n// change it to cyclops.cse.iitk.ac.in\r\n//const SERVER=\"http://cyclops.cse.iitk.ac.in:5000/\"\r\n const SERVER=\"http://localhost:5000/\"\r\n\r\nasync function contactServer(endpoint, query) {\r\n    var fetchlink\r\n    if (query == null)\r\n        fetchlink = SERVER + endpoint\r\n    else\r\n        fetchlink = SERVER + endpoint + \"?\" + query\r\n    return fetch(fetchlink, {method : \"GET\"})\r\n.then(response => response.json())\r\n.then(data => {console.log(\"Sending request for \" + fetchlink + \" \\n\"); return data;})\r\n.catch(console.log(\"Got error\\n\"));\r\n}\r\n\r\n//const passcode = React.createRef();\r\nfunction Solve() {\r\n    const [passcode, setPasscode] = useState(\"\");\r\n    const [grammar, setGrammar] = useState(\"\");\r\n    const [task, setTask] = useState(\"\");\r\n    const [grammarlist, setGrammarList] = useState(\"\");\r\n    const [tasklist, setTaskList] = useState(\"\");\r\n    const [parsetable, setParseTable] = useState(\"\");\r\n    const [solution, setSolution] = useState(\"\");\r\n    const [feedback, setFeedback] = useState(\"\");\r\n    const [finalmsg, setFinalMsg] = useState(\"\");\r\n\r\n    // input: JOSN containing Grammar, Feedback from cyclops and the parse table\r\n    // returns: blocks of <div> displaying Grammar, parse table and feedback (in the given order)\r\n    function Display() {\r\n        if(parsetable === \"\"){\r\n            return ( <div> </div>)\r\n        }\r\n        else{\r\n        var jsonD = JSON.parse(parsetable)\r\n        const grammarDiv = jsonD[\"Grammar\"].map((ele) =>\r\n                <li>{ele}</li>\r\n            )\r\n        const feedbackDiv = jsonD[\"Feedback\"].map((ele) =>\r\n                <li>{ele}</li>\r\n            )\r\n\r\n        //{'non_term' : 'A',\"a\" : 0,\"c\" : 3,\"b\" : 3,\"$\" : 0}\r\n        var ptKeys = Object.keys(jsonD[\"ParseTable\"][0]).map((ele) =>\r\n                    ele\r\n            )\r\n\r\n        var ptHead = [\"non_term\"];\r\n        var ptHeadD = [\"Non-Term\"]\r\n        for(let i =0; i < ptKeys.length; i++){\r\n            if( \"non_term\" !== ptKeys[i]){\r\n                ptHead.push(ptKeys[i])\r\n                ptHeadD.push(ptKeys[i])\r\n            }\r\n        }\r\n\r\n        const ptHeadDiv = ptHeadD.map((ele) =>\r\n                <th className=\"border border-slate-400 border-black text-lg\" style={{backgroundColor: \"darkslategrey\", color: \"white\"}}>{ele}</th>\r\n        )\r\n\r\n        const ptBodyDiv = jsonD[\"ParseTable\"].map((ele) =>\r\n            <tr className=\"border-4 border-slate-100 border-black text-lg\">\r\n            {ptHead.map((k) => <td className=\"border border-slate-100 border-black\"> {ele[k]} </td> )}\r\n            </tr>\r\n        )\r\n        return (\r\n\r\n                <div className=\"flex flex-col container grid grid-cols-1 gap-2\">\r\n                {/* Sumit : Edited this */}\r\n                <div className=\"font-mono flex flex-col justify-center gap-2 text-bold border-2 bg-gray-200 col-span-1\r\n                  border-blue-500 px-5 py-5   p-6 rounded-lg shadow-lg\">\r\n                    <div className=\"font-mono flex flex-row justify-center gap-2\">\r\n                    <div className=\"bg-yellow-100 border-2 border-yellow-500 px-3 py-3 rounded-lg shadow-lg\">\r\n                     <h6 class=\"font-bold text-sm text-xl font-medium leading-normal mt-0 mb-2 text-blue-900 bg-red-200\">\r\n                      Grammar Provided:\r\n                        </h6>\r\n                      <ol className=\"text-lg\">{grammarDiv}</ol>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"px-3 py-3 bg-green-100 col-span-2\r\n                      border-green-500 border-2 rounded-lg shadow-lg items-start justify-start\">\r\n                            <h6 className=\"font-bold font-medium text-xl leading-normal mt-0 mb-2 text-blue-900 bg-red-200\">\r\n                                Parse Table :\r\n                            </h6>\r\n                            <table border=\"1\" className=\"table table-auto table-striped border-black border border-slate-400 \">\r\n                                <thead>\r\n                                {ptHeadDiv}\r\n                                {ptBodyDiv}\r\n                                </thead>\r\n                            </table>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"font-bold text-red-900\"><span className=\"font-mono\">'eps'</span> represents <Latex>$\\epsilon$ </Latex></div>\r\n                </div>\r\n                    <br />\r\n                <div className=\"bg-gray-200 border-2 border-blue-500 px-3 py-3 rounded-lg shadow-lg\">\r\n                  <h6 class=\"font-bold font-medium text-xl text-sm mt-0 mb-2 text-blue-900 bg-yellow-200\">\r\n                   Feedback provided by Cyclops :\r\n                 </h6>\r\n                 <ol className=\"list-decimal font-medium text-lg text-sm mt-0 mb-2\">{feedbackDiv}</ol>\r\n                 </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function page() {\r\n        return (\r\n        <div>\r\n\r\n            <span className=\"px-1\"></span>\r\n            <div className=\"text-blue-800 font-bold text-xl\"> Enter the passcode </div>\r\n        <div className='login flex flex-row items-center'>\r\n            {/* Sumit : Edited this */}\r\n            <input className=\"shadow-sm font-mono appearance-none block text-gray-700 font-bold\"\r\n                type=\"text\" value={passcode} onChange={handleInput} />\r\n            {/* Sumit : Edited this */}\r\n            <span className=\"px-1\"></span>\r\n            <button className=\"text-center text-white-400 font-bold rounded-lg py-1 px-1\r\n                focus:outline-none bg-green-300 border-2 shadow-lg border-green-600\" id=\"submit\" name=\"check\" value=\"check\" type=\"submit\"\r\n                  onClick={handleClick}>Load</button>\r\n            {/* Sumit : Added this for small space this */}\r\n            <span className=\"px-1\"></span>\r\n            {/*<button className=\"text-center text-black-700 font-bold rounded-lg py-1 px-1*/}\r\n            {/* focus:outline-none bg-blue-300 border-2 shadow-lg border-blue-700\" id=\"reset\" name=\"reset\" value=\"reset\" type=\"submit\"*/}\r\n            {/*    onClick={() => window.location.reload(false)}>Reset</button>*/}\r\n        </div>\r\n        <div className='container'>\r\n        <table>\r\n        <tr>\r\n          <th>\r\n            <Selector title='Grammar' endpoint=\"getgrammar\" value={grammar} changeHook={grammarChanged} query={null} optionlist = {grammarlist} />\r\n            </th>\r\n          <th>\r\n            <Selector title='Task' endpoint=\"gettask\" value={task} changeHook={taskChanged} query={grammar} optionlist = {tasklist} />\r\n            </th>\r\n        </tr>\r\n        </table>\r\n        </div>\r\n        <div>\r\n\r\n        {/* <textarea value = {parsetable} /> */}\r\n        <Display></Display>\r\n        <br />\r\n        {/* Sumit : Edited this */}\r\n        <h4 className=\"text-xl font-bold leading-normal mt-0 mb-2 text-blue-700\">\r\n         Solution :\r\n       </h4>\r\n       {/* Sumit : Edited this */}\r\n        <textarea className=\" form-control\r\n        font-mono\r\n        block\r\n        w-full\r\n        h-64\r\n        px-3\r\n        py-2\r\n        text-base\r\n        font-normal\r\n        text-gray-700\r\n        bg-yellow-100 bg-clip-padding\r\n        border-2 border-solid border-gray-700\r\n        rounded\r\n        transition\r\n        ease-in-out\r\n        m-0\r\n        focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\r\n        border-2\" value = {solution} onChange = {e => {setSolution(e.target.value)}} />\r\n        <br />\r\n        <h4 className=\"text-xl font-bold leading-normal mt-0 mb-2 text-blue-700\">\r\n         Tool Feedback :\r\n       </h4>\r\n       {/* Sumit : Edited this */}\r\n        <textarea className=\"form-control\r\n        h-64\r\n        block\r\n        font-mono\r\n        w-full\r\n        px-3\r\n        py-2\r\n        text-base\r\n        font-normal\r\n        bg-yellow-100\r\n        text-gray-700\r\n        bg-white bg-clip-padding\r\n        border-2 border-solid border-gray-700\r\n        rounded\r\n        transition\r\n        ease-in-out\r\n        m-0\r\n        focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\r\n        border-2\" value = \"\" value = {feedback} onChange = {e => {setFeedback(e.target.value)}} />\r\n        <br />\r\n        </div >\r\n            <div className=\"flex flex-row content-center\">\r\n            <button className=\"text-center text-red-900 font-bold rounded-lg py-1 px-1\r\n              w-2/12 focus:outline-none bg-red-100 border-2 shadow-lg border-red-700\" id=\"submit\" name=\"submit\" value=\"submit\" type=\"submit\" onClick={handleSubmit}>Submit</button>\r\n            <span className=\"px-2\"></span>\r\n            <div className=\" text-red-900\">{finalmsg}</div>\r\n        </div><span className=\"px-2\"></span>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    // e is the event object (\"target\" is a property of the event object. https://www.w3schools.com/jsref/obj_event.asp)\r\n  const handleInput = (e) => {setPasscode(e.target.value); console.log(\"Got \" + e.target.value);}\r\n\r\n    function handleClick() {\r\n        console.log(\"Hello\" + passcode);\r\n        setGrammar(\"\");\r\n        setTask(\"\");\r\n        setParseTable(\"\");\r\n        setSolution(\"\");\r\n        setFeedback(\"\");\r\n        setFinalMsg(\"\");\r\n        LoadProblem(passcode);\r\n //       return (\r\n //           <LoadProblem value={passcode.value} />\r\n  //      )\r\n    }\r\n\r\nfunction handleSubmit(endpoint) {\r\n    try {\r\n  return fetch(SERVER + \"soln\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n//        'Access-Control-Allow-Origin': '*',\r\n//        'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, DELETE',\r\n//        'Access-Control-Max-Age': '3600',\r\n//        'Access-Control-Allow-Headers': 'Content-Type, Origin, Cache-Control, X-Requested-With',\r\n//        'Access-Control-Allow-Credentials': 'true'\r\n      },\r\n      body: JSON.stringify({\r\n        'passcode': passcode,\r\n        'grammar': grammar,\r\n        'task': task,\r\n        'solution': solution,\r\n        'feedback': feedback,\r\n      })\r\n}).then(response => response.json())\r\n.then(data => {setGrammar(\"\");\r\nsetTask(\"\");\r\nsetParseTable(\"\");\r\nsetSolution(\"\");\r\nsetFeedback(\"\");\r\nsetFinalMsg(data['result']); return data;})\r\n    //})\r\n.catch(console.log(\"Got POST fetch error\\n\"));\r\n //       return (\r\n //           <LoadProblem value={passcode.value} />\r\n  //      )\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n//.then(e => {console.log(e.body.json);\r\n    }\r\n\r\n    function grammarChanged(e) {\r\n        setGrammar(e.target.value);\r\n        // setGrammar(\"\");\r\n        setTask(\"\");\r\n        setParseTable(\"\");\r\n        setSolution(\"\");\r\n        setFeedback(\"\");\r\n        setFinalMsg(\"\");\r\n        console.log(\"Grammar: \" + e.target.value);\r\n    //useEffect(() => {\r\n        contactServer(\"gettask\", \"grammar=\" + e.target.value)\r\n        .then(g => setTaskList(g));\r\n    //}, []);\r\n        //LoadProblem(passcode);\r\n //       return (\r\n //           <LoadProblem value={passcode.value} />\r\n  //      )\r\n    }\r\n\r\nfunction LoadProblem(msg) {\r\n    console.log(\"World\" + msg);\r\n    //const passcode = this.refs[this.state.passcode].value;\r\n    //const passcode = document.getElementById(\"passcode\").value;\r\n    const passcode = msg; //document.querySelector(\"login\").value;\r\n    //useEffect(() => {\r\n        contactServer(\"getgrammar?passcode=\" + passcode, null)\r\n        .then(g => setGrammarList(g));\r\n    //}, []);\r\n    return (\r\n        <h1> Hello </h1>\r\n    )\r\n}\r\n    function taskChanged(e) {\r\n        setTask(e.target.value);\r\n        console.log(\"Task: \" + e.target.value);\r\n    //useEffect(() => {\r\n        contactServer(\"getparsetable\", \"grammar=\" + grammar + \"&task=\" + e.target.value)\r\n        .then(g => setParseTable(g));\r\n    //}, []);\r\n        //LoadProblem(passcode);\r\n //       return (\r\n //           <LoadProblem value={passcode.value} />\r\n  //      )\r\n    }\r\n           // <input ref={passcode} type = \"text\" id=\"passcode\" defaultValue=\"Hi\"></input>\r\n           // <textarea ref={passcode} id=\"passcode\" defaultValue=\"Hi\"></textarea>\r\n        //<label id=\"Roll no.: \">{passcode.value}</label>\r\n    return (page())\r\n}\r\n\r\n\r\nexport default Solve\r\n","C:\\Users\\shash\\OneDrive\\Desktop\\testing\\src\\components\\Selector.js",["83","84","85","86"],[],"import { useEffect, useState }  from \"react\";\r\n\r\nasync function getJsonData(url) {\r\ntry {\r\nlet response = await fetch(url, {method : \"GET\"});\r\nlet response1 = await response.json();\r\nreturn await response1.data;\r\n} catch(err) {\r\nconsole.log(err);\r\n}\r\n}\r\n\r\nfunction Header(props) {\r\n//async () => {\r\n//  const a = await cars;\r\n//  console.log(a);\r\n//    a1 = a;\r\n//};\r\n//  console.log(a1);\r\n\r\n//.then((data) => {return data})\r\n//.catch((err) => { console.log(err); }) \r\n//    const cars = getJsonData(\"http://localhost:5000/getjson\");\r\n    //fetch('http://localhost:5000/getjson', { method: 'GET' })\r\n    //                    .then((response) => {\r\n    //if (!response.ok) {\r\n   //   throw new Error(`Error! status: ${response.status}`);\r\n    //}\r\n    //                        console.log(response.body);\r\n    //                        response.json()\r\n    //                    }).then(data => console.log(data));\r\n    //this.setState({ totalReactPackages: data.total })\r\n    try{\r\n    const list = ['Volvo', 'Saab', 'Mercedes', 'Audi']\r\n    //const cars = [ {label: 'Volvo', value: \"volvo\"}, {label: 'Saab', value: 'saab'}, {lebel: 'Mercedes', value: 'mercedes'}, {label: 'Audi', value: 'audi'} ]\r\n    //const cars = { 'volvo': \"Volvo\", 'saab': 'Saab', 'mercedes': 'Mercedes', 'audi': 'Audi' }\r\n    var keys = Object.keys(props.optionlist);\r\n    const selectItems = keys.map((c) => <option value={c} id={c}> {props.optionlist[c]} </option>)\r\n    console.log(selectItems); \r\n        //<label id=\"cars1\">Choose a car:</label>\r\n    return (\r\n        <header>\r\n            <h1 style={{color:'blue', backgroundColor:'yellow'}}> {props.title} </h1>\r\n            <div>\r\n            <div>\r\n            <select name=\"cars\" id=\"cars\" onChange={props.changeHook} value={props.value}>\r\n                {selectItems}\r\n            </select>\r\n            </div>\r\n            </div>\r\n        </header>\r\n    )\r\n    } catch (err) {\r\n        //console.log(err);\r\n        return (\r\n        <header>\r\n            <h1> Got Error! </h1>\r\n        </header>\r\n        )\r\n}\r\n}\r\n\r\nHeader.defaultProp = {\r\n    title: 'Not defined', \r\n    endpoint: 'getjason'\r\n} \r\n\r\n//Header.defaultProps = {\r\n//    title: 'Task Tracker',\r\n//}\r\n\r\nexport default Header\r\n","C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\index.js",[],[],"C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\New.js",["87","88","89","90","91","92","93","94"],[],"C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\reportWebVitals.js",[],[],"C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\Solve.js",["95","96","97"],[],"C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\View.js",["98","99","100","101","102"],[],"C:\\Users\\shash\\OneDrive\\Desktop\\Fake\\src\\components\\Selector.js",["103","104","105","106"],[],{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"111","line":10,"column":8,"nodeType":"109","messageId":"110","endLine":10,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":104,"column":57,"nodeType":"114","endLine":104,"endColumn":74},{"ruleId":"112","severity":1,"message":"113","line":122,"column":68,"nodeType":"114","endLine":122,"endColumn":86},{"ruleId":"112","severity":1,"message":"113","line":133,"column":71,"nodeType":"114","endLine":133,"endColumn":90},{"ruleId":"115","severity":1,"message":"116","line":193,"column":21,"nodeType":"114","endLine":193,"endColumn":38},{"ruleId":"115","severity":1,"message":"116","line":205,"column":20,"nodeType":"114","endLine":205,"endColumn":38},{"ruleId":"115","severity":1,"message":"116","line":215,"column":20,"nodeType":"114","endLine":215,"endColumn":38},{"ruleId":"107","severity":1,"message":"117","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"118","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":44},{"ruleId":"107","severity":1,"message":"119","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":16},{"ruleId":"107","severity":1,"message":"120","line":30,"column":13,"nodeType":"109","messageId":"110","endLine":30,"endColumn":16},{"ruleId":"107","severity":1,"message":"121","line":104,"column":11,"nodeType":"109","messageId":"110","endLine":104,"endColumn":19},{"ruleId":"107","severity":1,"message":"117","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"118","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":201,"column":30,"nodeType":"124","messageId":"125","endLine":201,"endColumn":48},{"ruleId":"107","severity":1,"message":"117","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":19},{"ruleId":"107","severity":1,"message":"126","line":1,"column":21,"nodeType":"109","messageId":"110","endLine":1,"endColumn":29},{"ruleId":"107","severity":1,"message":"127","line":3,"column":16,"nodeType":"109","messageId":"110","endLine":3,"endColumn":27},{"ruleId":"107","severity":1,"message":"128","line":34,"column":11,"nodeType":"109","messageId":"110","endLine":34,"endColumn":15},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"111","line":10,"column":8,"nodeType":"109","messageId":"110","endLine":10,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":104,"column":57,"nodeType":"114","endLine":104,"endColumn":74},{"ruleId":"112","severity":1,"message":"113","line":122,"column":68,"nodeType":"114","endLine":122,"endColumn":86},{"ruleId":"112","severity":1,"message":"113","line":133,"column":71,"nodeType":"114","endLine":133,"endColumn":90},{"ruleId":"115","severity":1,"message":"116","line":193,"column":21,"nodeType":"114","endLine":193,"endColumn":38},{"ruleId":"115","severity":1,"message":"116","line":205,"column":20,"nodeType":"114","endLine":205,"endColumn":38},{"ruleId":"115","severity":1,"message":"116","line":215,"column":20,"nodeType":"114","endLine":215,"endColumn":38},{"ruleId":"107","severity":1,"message":"117","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"118","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":201,"column":30,"nodeType":"124","messageId":"125","endLine":201,"endColumn":48},{"ruleId":"107","severity":1,"message":"117","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"118","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":44},{"ruleId":"107","severity":1,"message":"119","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":16},{"ruleId":"107","severity":1,"message":"120","line":30,"column":13,"nodeType":"109","messageId":"110","endLine":30,"endColumn":16},{"ruleId":"107","severity":1,"message":"121","line":104,"column":11,"nodeType":"109","messageId":"110","endLine":104,"endColumn":19},{"ruleId":"107","severity":1,"message":"117","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":19},{"ruleId":"107","severity":1,"message":"126","line":1,"column":21,"nodeType":"109","messageId":"110","endLine":1,"endColumn":29},{"ruleId":"107","severity":1,"message":"127","line":3,"column":16,"nodeType":"109","messageId":"110","endLine":3,"endColumn":27},{"ruleId":"107","severity":1,"message":"128","line":34,"column":11,"nodeType":"109","messageId":"110","endLine":34,"endColumn":15},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Frame' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Selector' is defined but never used.","'div' is assigned a value but never used.","'passcode' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","'getJsonData' is defined but never used.","'list' is assigned a value but never used."]